# Basics
code_width		= 120
indent_with_tabs	= 1		# 1=indent to level only, 2=indent with tabs
input_tab_size		= 4		# original tab size
output_tab_size		= 4		# new tab size
indent_columns		= output_tab_size
indent_label		= 1		# pos: absolute col, neg: relative column

# Newlines
nl_enum_brace		= remove	# "enum {" vs "enum \n {"
nl_union_brace		= remove	# "union {" vs "union \n {"
nl_struct_brace		= remove	# "struct {" vs "struct \n {"
nl_assign_brace		= remove
nl_do_brace 		= remove	# "do {" vs "do \n {"
nl_if_brace 		= remove	# "if () {" vs "if () \n {"
nl_else_if		= remove
nl_for_brace 		= remove	# "for () {" vs "for () \n {"
nl_else_brace 		= remove	# "else {" vs "else \n {"
nl_while_brace 		= remove	# "while () {" vs "while () \n {"
nl_switch_brace 	= remove	# "switch () {" vs "switch () \n {"
nl_brace_while		= remove	# "} while" vs "} \n while" - cuddle while
nl_brace_else		= remove	# "} else" vs "} \n else" - cuddle else
nl_func_var_def_blk	= 0		# number of blank lines after variable definitions

# Source code modifications
mod_paren_on_return	= remove	# "return 1;" vs "return (1);"
mod_full_brace_if	= remove	# "if (a) a--;" vs "if (a) { a--; }"
mod_full_brace_for	= remove	# "for () a--;" vs "for () { a--; }"
mod_full_brace_do	= add		# "do a--; while ();" vs "do { a--; } while ();"
mod_full_brace_while	= add		# "while (a) a--;" vs "while (a) { a--; }"
mod_full_brace_nl	= 2		# don't remove if more than 3 newlines

# inter-character spacing options
sp_return_paren		= force		# "return (1);" vs "return(1);"
sp_sizeof_paren		= remove	# "sizeof (int)" vs "sizeof(int)"
sp_before_sparen	= remove	# "if (" vs "if("
sp_after_sparen		= add		# "if () {" vs "if (){"
sp_after_cast		= remove	# "(int) a" vs "(int)a"
sp_inside_braces	= add		# "{ 1 }" vs "{1}"
sp_inside_braces_struct	= add		# "{ 1 }" vs "{1}"
sp_inside_braces_enum	= add		# "{ 1 }" vs "{1}"
sp_assign		= add
sp_arith		= ignore
sp_bool			= add
sp_compare		= add
sp_after_comma		= add
sp_fparen_brace		= add
sp_pp_concat		= remove
sp_after_semi_for_empty	= remove
sp_after_semi_for	= remove

# Functions
sp_paren_brace		= add		# "int foo(){ vs. int foo() {"
sp_func_def_paren	= remove	# "int foo\n(){" vs "int foo(){"
sp_func_call_paren	= remove	# "foo (" vs "foo("
sp_func_proto_paren	= remove	# "int foo ();" vs "int foo();"
nl_fcall_brace		= remove	# "list_for_each() {" vs "list_for_each()\n{"
nl_fdef_brace		= remove	# "int foo() {" vs "int foo()\n{"

# Macros
sp_macro		= remove
sp_macro_func		= remove 
align_nl_cont		= true

# Switch
nl_before_case		= true
nl_after_case		= true

# Pointers
sp_between_ptr_star	= remove
sp_before_ptr_star	= force
sp_after_ptr_star	= remove

# Aligning
align_with_tabs		= false		# use tabs to align
align_on_tabstop	= false		# align on tabstops
align_var_def_thresh	= 4
align_func_params	= true		# align variable definitions
align_assign_span	= 2
align_assign_thresh	= 4
align_nl_cont		= true		# align macros with backlash+newline
## Algin Variable Assignment
align_var_def_span	= 2		# max distance of lines considered together
align_var_def_thresh	= 4		# max horizontal distance for grouping
align_var_def_star_style = 2
align_var_def_amp_style = 2
align_var_def_inline	= true
## Enum Assignment
align_enum_equ_thresh	= 4
align_enum_equ_span	= 2
sp_enum_assign		= force
align_struct_init_span	= 2		# align stuff in a structure init '= { }'
align_var_struct_span	= 2
align_var_struct_thresh = 4
align_right_cmt_span	= 2
